/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROOEXPANDGAUSS
#define ROOEXPANDGAUSS
#include "RooMath.h"
#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

class RooExpAndGauss : public RooAbsPdf {
public:
  RooExpAndGauss() ;
  RooExpAndGauss(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _mbar,
	      RooAbsReal& _thresh,
	      RooAbsReal& _k);
  RooExpAndGauss(const RooExpAndGauss& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooExpAndGauss(*this,newname); }
  inline virtual ~RooExpAndGauss() { }

protected:

  RooRealProxy x ;
  RooRealProxy mbar ;
  RooRealProxy thresh ;
  RooRealProxy k ;
  // Int_t getAnalyticalIntegral(RooArgSet&,RooArgSet&,const char*) const;
  // Double_t analyticalIntegral(int,const char*) const;
  Double_t evaluate() const ;

private:

  ClassDef(RooExpAndGauss,1) // Your description goes here...
};

#endif
